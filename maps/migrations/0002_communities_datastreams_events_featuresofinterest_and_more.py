# Generated by Django 5.2 on 2025-07-09 16:16

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('maps', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Communities',
            fields=[
                ('cid', models.IntegerField(primary_key=True, serialize=False)),
                ('cname', models.TextField()),
                ('slug', models.TextField()),
                ('cordslat', models.FloatField()),
                ('cordslong', models.FloatField()),
                ('streamid', models.IntegerField()),
            ],
            options={
                'db_table': 'communities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Datastreams',
            fields=[
                ('datastream_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('observation_type', models.TextField(blank=True, null=True)),
                ('unit_of_measurement_name', models.TextField(blank=True, null=True)),
                ('unit_of_measurement_symbol', models.TextField(blank=True, null=True)),
                ('unit_of_measurement_definition', models.TextField(blank=True, null=True)),
                ('observed_area', models.JSONField(blank=True, null=True)),
                ('phenomenon_time_start', models.TextField(blank=True, null=True)),
                ('phenomenon_time_end', models.TextField(blank=True, null=True)),
                ('result_time_start', models.TextField(blank=True, null=True)),
                ('result_time_end', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'datastreams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('eid', models.AutoField(primary_key=True, serialize=False)),
                ('cid', models.IntegerField()),
                ('ename', models.TextField()),
                ('edescription', models.TextField()),
                ('eimg', models.TextField()),
                ('edate', models.DateField()),
                ('sensor_id', models.IntegerField(blank=True, null=True)),
                ('data_type_id', models.IntegerField(blank=True, null=True)),
                ('data_start_date', models.DateTimeField(blank=True, null=True)),
                ('data_end_date', models.DateTimeField(blank=True, null=True)),
                ('data_summary', models.TextField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeaturesOfInterest',
            fields=[
                ('feature_of_interest_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('encoding_type', models.TextField()),
                ('feature', models.JSONField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'features_of_interest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalLocationLocations',
            fields=[
                ('pk', models.CompositePrimaryKey('historical_location_id', 'location_id', blank=True, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'historical_location_locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalLocations',
            fields=[
                ('historical_location_id', models.IntegerField(primary_key=True, serialize=False)),
                ('time', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'historical_locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('location_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('encoding_type', models.TextField(blank=True, null=True)),
                ('location', models.JSONField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Observations',
            fields=[
                ('observation_id', models.IntegerField(primary_key=True, serialize=False)),
                ('phenomenon_time_start', models.TextField(blank=True, null=True)),
                ('phenomenon_time_end', models.TextField(blank=True, null=True)),
                ('result_time', models.TextField(blank=True, null=True)),
                ('result', models.JSONField(blank=True, null=True)),
                ('result_quality', models.JSONField(blank=True, null=True)),
                ('valid_time_start', models.TextField(blank=True, null=True)),
                ('valid_time_end', models.TextField(blank=True, null=True)),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('result_navd88', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
            ],
            options={
                'db_table': 'observations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObservedProperties',
            fields=[
                ('observed_property_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'observed_properties',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField()),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sensors',
            fields=[
                ('sensor_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('encoding_type', models.TextField(blank=True, null=True)),
                ('metadata', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sensors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SotLocations',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('latitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('longitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('facing_direction', models.TextField()),
                ('category', models.TextField()),
                ('icon', models.TextField()),
                ('photo_instructions', models.TextField(blank=True, null=True)),
                ('is_active', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sot_locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SotPhotoMetadata',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('photo_id', models.IntegerField()),
                ('metadata_key', models.TextField()),
                ('metadata_value', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sot_photo_metadata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SotPhotos',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('location_id', models.IntegerField()),
                ('user_ip', models.TextField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('filename', models.TextField()),
                ('original_filename', models.TextField()),
                ('file_size', models.IntegerField()),
                ('compressed_file_size', models.IntegerField(blank=True, null=True)),
                ('mime_type', models.TextField()),
                ('photo_latitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('photo_longitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('photo_timestamp', models.DateTimeField()),
                ('photo_date', models.DateField()),
                ('photo_time', models.TextField()),
                ('gps_accuracy', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('distance_from_spot', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('original_file_path', models.TextField(blank=True, null=True)),
                ('compressed_file_path', models.TextField(blank=True, null=True)),
                ('is_approved', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sot_photos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ThingLocations',
            fields=[
                ('pk', models.CompositePrimaryKey('thing_id', 'location_id', blank=True, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'thing_locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Things',
            fields=[
                ('thing_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'things',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('uname', models.TextField()),
                ('password', models.TextField()),
                ('salt', models.TextField()),
                ('random', models.TextField()),
                ('uid', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='test_event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
    ]
